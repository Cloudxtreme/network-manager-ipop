/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -N -m -c GsmInterfaceConnectionInterface -p gsminterfaceconnectioninterface /home/andreas/Programing/C++/network-manager-ipop/kde/libs/service/interfaces/org.kde.networkmanagement.gsminterfaceconnection.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef GSMINTERFACECONNECTIONINTERFACE_H
#define GSMINTERFACECONNECTIONINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.kde.networkmanagement.GsmInterfaceConnection
 */
class GsmInterfaceConnectionInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.networkmanagement.GsmInterfaceConnection"; }

public:
    GsmInterfaceConnectionInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~GsmInterfaceConnectionInterface();

    Q_PROPERTY(int accessTechnology READ accessTechnology)
    inline int accessTechnology() const
    { return qvariant_cast< int >(property("accessTechnology")); }

    Q_PROPERTY(int signalQuality READ signalQuality)
    inline int signalQuality() const
    { return qvariant_cast< int >(property("signalQuality")); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<int> getAccessTechnology()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getAccessTechnology"), argumentList);
    }

    inline QDBusPendingReply<int> getSignalQuality()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getSignalQuality"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void accessTechnologyChanged(int tech);
    void gsmPropertiesChanged(const QVariantMap &properties);
    void signalQualityChanged(int quality);
};

#endif
