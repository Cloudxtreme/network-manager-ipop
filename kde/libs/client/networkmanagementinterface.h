/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -N -m -c NetworkManagementInterface -p networkmanagementinterface /home/andreas/Programing/C++/network-manager-ipop/kde/libs/service/interfaces/org.kde.networkmanagement.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef NETWORKMANAGEMENTINTERFACE_H
#define NETWORKMANAGEMENTINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.kde.networkmanagement
 */
class NetworkManagementInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.networkmanagement"; }

public:
    NetworkManagementInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~NetworkManagementInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> FinishInitialization()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("FinishInitialization"), argumentList);
    }

    inline QDBusPendingReply<QStringList> ListActivatables()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("ListActivatables"), argumentList);
    }

    inline QDBusPendingReply<> ReEmitActivatableList()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("ReEmitActivatableList"), argumentList);
    }

    inline QDBusPendingReply<> ReadConfig()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("ReadConfig"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void ActivatableAdded(const QVariantMap &properties);
    void ActivatableRemoved(const QString &removed);
    void ModuleReady();
    void ReloadConfig();
};

#endif
